#!/usr/bin/env python
PACKAGE = "xian_dj_remote_operation_param_pkg" # 需跟功能包的名称一样
from dynamic_reconfigure.parameter_generator_catkin import *

# 心跳
xian_dj_tele_op_params_server_heart_beat = 0
xian_dj_tele_op_controller_server_heart_beat = 0
xian_dj_tele_op_controller_server_tcp_heart_beat = 0
xian_dj_tele_op_controller_client_heart_beat = 0
xian_dj_tele_op_controller_client_tcp_heart_beat = 0
xian_dj_tele_op_error_monitor_heart_beat = 0
xian_dj_tele_op_back_end_heart_beat = 0

# 客户端
xian_dj_tele_op_left_client_cmd = 0
xian_dj_tele_op_right_client_cmd = 0
xian_dj_tele_op_up_client_cmd = 0
xian_dj_tele_op_down_client_cmd =0
xian_dj_tele_op_x_client_cmd = 0
xian_dj_tele_op_b_client_cmd = 0
xian_dj_tele_op_y_client_cmd = 0
xian_dj_tele_op_a_client_cmd = 0

xian_dj_tele_op_left_rocker_x_client_cmd = 0
xian_dj_tele_op_left_rocker_y_client_cmd = 0
xian_dj_tele_op_right_rocker_x_client_cmd = 0
xian_dj_tele_op_right_rocker_y_client_cmd = 0

xian_dj_tele_op_r1_client_cmd = 0
xian_dj_tele_op_r2_client_cmd = 0
xian_dj_tele_op_l1_client_cmd = 0
xian_dj_tele_op_l2_client_cmd = 0

# 服务端
xian_dj_tele_op_left_server_cmd = 0
xian_dj_tele_op_right_server_cmd = 0
xian_dj_tele_op_up_server_cmd = 0
xian_dj_tele_op_down_server_cmd =0
xian_dj_tele_op_x_server_cmd = 0
xian_dj_tele_op_b_server_cmd = 0
xian_dj_tele_op_y_server_cmd = 0
xian_dj_tele_op_a_server_cmd = 0

xian_dj_tele_op_left_rocker_x_server_cmd = 0
xian_dj_tele_op_left_rocker_y_server_cmd = 0
xian_dj_tele_op_right_rocker_x_server_cmd = 0
xian_dj_tele_op_right_rocker_y_server_cmd = 0

xian_dj_tele_op_r1_server_cmd = 0
xian_dj_tele_op_r2_server_cmd = 0
xian_dj_tele_op_l1_server_cmd = 0
xian_dj_tele_op_l2_server_cmd = 0

#心跳检测
xian_dj_tele_op_controller_server_error = 0
xian_dj_tele_op_controller_client_error = 0
xian_dj_tele_op_controller_server_tcp_error = 0
xian_dj_tele_op_controller_client_tcp_error = 0

xian_dj_tele_op_error_code = 500

gen = ParameterGenerator()

gen.add("xian_dj_tele_op_params_server_heart_beat", int_t, 0, "xian_dj_tele_op_params_server_heart_beat", xian_dj_tele_op_params_server_heart_beat, 0, 1000)
gen.add("xian_dj_tele_op_controller_server_heart_beat", int_t, 0, "xian_dj_tele_op_controller_server_heart_beat", xian_dj_tele_op_controller_server_heart_beat, 0, 1000)
gen.add("xian_dj_tele_op_controller_server_tcp_heart_beat", int_t, 0, "xian_dj_tele_op_controller_server_tcp_heart_beat", xian_dj_tele_op_controller_server_tcp_heart_beat, 0, 1000)
gen.add("xian_dj_tele_op_controller_client_heart_beat", int_t, 0, "xian_dj_tele_op_controller_client_heart_beat", xian_dj_tele_op_controller_client_heart_beat, 0, 1000)
gen.add("xian_dj_tele_op_controller_client_tcp_heart_beat", int_t, 0, "xian_dj_tele_op_controller_client_tcp_heart_beat", xian_dj_tele_op_controller_client_tcp_heart_beat, 0, 1000)
gen.add("xian_dj_tele_op_error_monitor_heart_beat", int_t, 0, "xian_dj_tele_op_error_monitor_heart_beat", xian_dj_tele_op_error_monitor_heart_beat, 0, 1000)
gen.add("xian_dj_tele_op_back_end_heart_beat", int_t, 0, "xian_dj_tele_op_back_end_heart_beat", xian_dj_tele_op_back_end_heart_beat, 0, 1000)

# 客户端
gen.add("xian_dj_tele_op_left_client_cmd", int_t, 0, "xian_dj_tele_op_left_client_cmd", xian_dj_tele_op_left_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_right_client_cmd", int_t, 0, "xian_dj_tele_op_right_client_cmd", xian_dj_tele_op_right_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_up_client_cmd", int_t, 0, "xian_dj_tele_op_up_client_cmd", xian_dj_tele_op_up_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_down_client_cmd", int_t, 0, "xian_dj_tele_op_down_client_cmd", xian_dj_tele_op_down_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_x_client_cmd", int_t, 0, "xian_dj_tele_op_x_client_cmd", xian_dj_tele_op_x_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_b_client_cmd", int_t, 0, "xian_dj_tele_op_b_client_cmd", xian_dj_tele_op_b_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_y_client_cmd", int_t, 0, "xian_dj_tele_op_y_client_cmd", xian_dj_tele_op_y_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_a_client_cmd", int_t, 0, "xian_dj_tele_op_a_client_cmd", xian_dj_tele_op_a_client_cmd, -1, 1)

gen.add("xian_dj_tele_op_left_rocker_x_client_cmd", double_t, 0, "xian_dj_tele_op_left_rocker_x_client_cmd", xian_dj_tele_op_left_rocker_x_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_left_rocker_y_client_cmd", double_t, 0, "xian_dj_tele_op_left_rocker_y_client_cmd", xian_dj_tele_op_left_rocker_y_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_right_rocker_x_client_cmd", double_t, 0, "xian_dj_tele_op_right_rocker_x_client_cmd", xian_dj_tele_op_right_rocker_x_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_right_rocker_y_client_cmd", double_t, 0, "xian_dj_tele_op_right_rocker_y_client_cmd", xian_dj_tele_op_right_rocker_y_client_cmd, -1, 1)

gen.add("xian_dj_tele_op_r1_client_cmd", int_t, 0, "xian_dj_tele_op_r1_client_cmd", xian_dj_tele_op_r1_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_r2_client_cmd", int_t, 0, "xian_dj_tele_op_r2_client_cmd", xian_dj_tele_op_r2_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_l1_client_cmd", int_t, 0, "xian_dj_tele_op_l1_client_cmd", xian_dj_tele_op_l1_client_cmd, -1, 1)
gen.add("xian_dj_tele_op_l2_client_cmd", int_t, 0, "xian_dj_tele_op_l2_client_cmd", xian_dj_tele_op_l2_client_cmd, -1, 1)

# 服务端
gen.add("xian_dj_tele_op_left_server_cmd", int_t, 0, "xian_dj_tele_op_left_server_cmd", xian_dj_tele_op_left_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_right_server_cmd", int_t, 0, "xian_dj_tele_op_right_server_cmd", xian_dj_tele_op_right_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_up_server_cmd", int_t, 0, "xian_dj_tele_op_up_server_cmd", xian_dj_tele_op_up_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_down_server_cmd", int_t, 0, "xian_dj_tele_op_down_server_cmd", xian_dj_tele_op_down_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_x_server_cmd", int_t, 0, "xian_dj_tele_op_x_server_cmd", xian_dj_tele_op_x_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_b_server_cmd", int_t, 0, "xian_dj_tele_op_b_server_cmd", xian_dj_tele_op_b_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_y_server_cmd", int_t, 0, "xian_dj_tele_op_y_server_cmd", xian_dj_tele_op_y_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_a_server_cmd", int_t, 0, "xian_dj_tele_op_a_server_cmd", xian_dj_tele_op_a_server_cmd, -1, 1)

gen.add("xian_dj_tele_op_left_rocker_x_server_cmd", double_t, 0, "xian_dj_tele_op_left_rocker_x_server_cmd", xian_dj_tele_op_left_rocker_x_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_left_rocker_y_server_cmd", double_t, 0, "xian_dj_tele_op_left_rocker_y_server_cmd", xian_dj_tele_op_left_rocker_y_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_right_rocker_x_server_cmd", double_t, 0, "xian_dj_tele_op_right_rocker_x_server_cmd", xian_dj_tele_op_right_rocker_x_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_right_rocker_y_server_cmd", double_t, 0, "xian_dj_tele_op_right_rocker_y_server_cmd", xian_dj_tele_op_right_rocker_y_server_cmd, -1, 1)

gen.add("xian_dj_tele_op_r1_server_cmd", int_t, 0, "xian_dj_tele_op_r1_server_cmd", xian_dj_tele_op_r1_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_r2_server_cmd", int_t, 0, "xian_dj_tele_op_r2_server_cmd", xian_dj_tele_op_r2_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_l1_server_cmd", int_t, 0, "xian_dj_tele_op_l1_server_cmd", xian_dj_tele_op_l1_server_cmd, -1, 1)
gen.add("xian_dj_tele_op_l2_server_cmd", int_t, 0, "xian_dj_tele_op_l2_server_cmd", xian_dj_tele_op_l2_server_cmd, -1, 1)

# 心跳监测
gen.add("xian_dj_tele_op_controller_server_error", int_t, 0, "xian_dj_tele_op_controller_server_error", xian_dj_tele_op_controller_server_error, 0, 1000)
gen.add("xian_dj_tele_op_controller_client_error", int_t, 0, "xian_dj_tele_op_controller_client_error", xian_dj_tele_op_controller_client_error, 0, 1000)
gen.add("xian_dj_tele_op_controller_server_tcp_error", int_t, 0, "xian_dj_tele_op_controller_server_tcp_error", xian_dj_tele_op_controller_server_tcp_error, 0, 1000)
gen.add("xian_dj_tele_op_controller_client_tcp_error", int_t, 0, "xian_dj_tele_op_controller_client_tcp_error", xian_dj_tele_op_controller_client_tcp_error, 0, 1000)

gen.add("xian_dj_tele_op_error_code", int_t, 0, "xian_dj_tele_op_error_code", xian_dj_tele_op_error_code, 0, 10000)


exit(gen.generate(PACKAGE,"xian_dj_tele_op_params_server","xian_dj_tele_op_params"))
# PACKAGE:包的名称；node_ZpmcDynamicParams：节点的名称,就是server节点的那个节点；zpmc_dynamic_params：生成的配置文件，跟.cfg文件名称一样即可